What happens when you initialize a repository?
git registers the directory as a repository
and waits for you to make the first commit(initial commit)


Why do you need to do it?



How is the staging area different from the working directory and the repository?
What value do you think it offers?
the staging area is different from a working directory because it tells you which files
are ready to be added to your repository on your next commit, but first you have
to add it your staging area by "git add ." then commit the change



How can you use the staging area to make sure you have one commit per logical
change?
you can use the staging area to make logical change by selecting specific file that has
been affected logically and then adding it to the staging area then commiting it.




What are some situations when branches would be helpful in keeping your history
organized?
I think branches are a good way for you to organise your incremental changes to your code
that you are not really sure if you wanna see the direct impact of it to the whole project
then you could create a branch in which to test a segment, and when you are sure, you would
merge it to your master for a total change(well atleast that just one reason to use branch)



How would branches help?

branches will help in organising your changes type, classifying certain type of change to 
areas that logically related.



How do the diagrams help you visualize the branch structure?

It help you identify which area belong to a certain category, without having to mix unrelated
areas.


What is the result of merging two branches together? 
Why do we represent it in
the diagram the way we do?


What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

